{"name":"Mockspec","tagline":"Full Pipeline","body":"\r\nThis is a repository for the entire mockspec pipeline that uses functional forms\r\nof the python code. \r\n\r\nTo run this code, the following python packgages need to be installed:\r\n    numpy\r\n    pytables\r\n    pandas\r\n\r\n\r\nOverview:\r\n\r\n    This code generates synthetic quasar absorption lines by running lines of sight (LOS) \r\n    through a simulated galaxy made with ART.  This repository has all the code required\r\n    to generate and analyze the spectra. \r\n\r\n\r\nBefore you run the code:\r\n    \r\n    There are a few steps that need to be taken before the code can be run. \r\n\r\n    1) Get the simulation in the correct format. ART output the entire simulation box, \r\n       typicaly 10Mpc along a side. Mockspec does not run on these boxes. It instead\r\n       runs on a small box selected from the large box. This selection is done using \r\n       ANA, a code written by Daniel Ceverino and greatly imporved by Kenza Arraki. \r\n       It is found in funcs/ana/. Running ANA can be challenging. It reuires the \r\n       following simulation files:\r\n            10MpcBox_HartGal_csf_a0.300.di\r\n            10MpcBox_HartGal_csf.d\r\n            PMcrda0.300.DAT\r\n            PMcrs0a0.300.DAT    \r\n            sf.dat\r\n\r\n        To control the run of ANA, there are two control file: \r\n            control.dat \r\n            schedule_R.dat\r\n    \r\n        Schedule_R.dat has most of the controls in it. The top section has flags as\r\n        to what the code should read in and what files it should produce. The sections \r\n        that definately need to have a 1 are:\r\n            Read N-body file\r\n            Read stellar file\r\n            Read HYDRO file\r\n            Set units and global variables\r\n            Find halo center using particle distribution\r\n            Compute angular momentum\r\n            density, temperature, entropy profiles and Rvir calculation\r\n            Binary file with gas cells inside 4Rvir-box\r\n            Binary file with gas cells inside 4Rvir-box (metalliciites)\r\n        Most of the rest of the file should not be touched. \r\n        ANA has an interesting behaviour where it finds the center of the galaxy, but\r\n        is super bad at it. You need to find the center with Rockstar and put it in \r\n        manually. The coordinates are put in on the lines \"xuser\", \"yuser\", \"zuser\". \r\n        The flag in front of \"ioptCenter=1/2/3-->potential/HF/IFRIT\" should be \r\n        set to 1, indicating the center is from a halo finder.\r\n\r\n        To setup control.dat, only change after the three repeated lines of \"1. 129\". \r\n        The single number on the next line is the number of snapshots to run ANA on.\r\n        Leave this as one. The rest of the file is the list of expansion parameters\r\n        of the snapshots. Even if there are several numbers listed here, ANA will only \r\n        run on the first one, since the number of snapshots to run is set to 1. \r\n\r\n        Once both control.dat and schedule_R.dat are set, run ana.R.exe\r\n        The file needed is the GZ file. \r\n\r\n    2) The pipeline does not run on the binary files. It runs on an ASCII version \r\n        of the file. To convert, use readbinary.exe. Run it with the format of \r\n        \r\n            readbinary.exe <binary file> <name of output ASCII file> GZ\r\n\r\n        The name of the output ASCII file should be the name of the binary file,\r\n        but with .dat replaced with .txt\r\n\r\n\r\n    3) Configure the run. The parameters of the run are set in the mockspec.config \r\n       file. There are three sections in this file. The first describes the \r\n       galaxy and basic code parameters.  These are mostly self-explanatory. The\r\n       number of cores only affects the codes that can be run with parallization,\r\n       namely cellfinder. The root location is not used by anything, so don't change it\r\n    \r\n       The second section determines which codes will be run. A 1 turns the code on, \r\n       a 0 turns it off. \r\n\r\n       The third section describes the ions to be probed and what instrument will be\r\n       used for that ion. \r\n\r\n\r\n    4) Ensure the directory has all required files, namely the galaxy file \r\n\r\n    5) Make all compiled codes. This includes: rates, cellfinder, los7, specsynth, \r\n       sysabs, and cullabs. To make rates, you need to download and untar the follwing files:\r\n            http://astronomy.nmsu.edu/jrvander/ratesFiles/coolingtables.tar.gz\r\n            http://astronomy.nmsu.edu/jrvander/ratesFiles/lapack.tar.gz\r\n            http://astronomy.nmsu.edu/jrvander/ratesFiles/slatec.tar.gz\r\n\r\n  \r\nRunning the code:\r\n    The main driver is mockspec.py. Run this in the directory with the snapshot.   \r\n    The final output is the ALL sysabs  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}